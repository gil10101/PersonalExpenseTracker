type Expense {
  id: ID!
  name: String!
  amount: Float!
  category: String!
  date: String!
  userId: String
  createdAt: String
  updatedAt: String
}

type Category {
  id: ID!
  name: String!
  description: String
  createdAt: String
  updatedAt: String
}

type Budget {
  id: ID!
  userId: String!
  categoryId: String!
  amount: Float!
  month: Int!
  year: Int!
  createdAt: String
  updatedAt: String
}

type Query {
  getAllExpenses: [Expense]
  getExpenseById(id: ID!): Expense
  getExpensesByCategory(category: String!): [Expense]
  getExpensesByDateRange(startDate: String!, endDate: String!): [Expense]
  getAllCategories: [Category]
  getBudgetsByMonth(userId: String!, month: Int!, year: Int!): [Budget]
}

type Mutation {
  createExpense(name: String!, amount: Float!, category: String!, date: String!, userId: String): Expense
  updateExpense(id: ID!, name: String, amount: Float, category: String, date: String): Expense
  deleteExpense(id: ID!): Expense
  createCategory(name: String!, description: String): Category
  createBudget(userId: String!, categoryId: String!, amount: Float!, month: Int!, year: Int!): Budget
}

schema {
  query: Query
  mutation: Mutation
} 